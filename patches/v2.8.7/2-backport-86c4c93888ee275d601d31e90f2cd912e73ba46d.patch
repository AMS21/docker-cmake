From aabf65a073e812afd9ba417fd56c25017166a43e Mon Sep 17 00:00:00 2001
From: Modestas Vainius <modax@debian.org>
Date: Mon, 20 Feb 2012 09:39:03 -0500
Subject: [PATCH] KWIML: Teach ABI.h that MIPS is biendian

MIPS machines are biendian hence they can run both big endian kernels
e.g. Debian mips architecture, and little endian kernels e.g. Debian
mipsel architecture.  Use predefined macros to distinguish them.
---
 ABI.h.in | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/Utilities/KWIML/test/test_INT_format.h.in b/Utilities/KWIML/test/test_INT_format.h.in
index a8ea26314cb..71b443d6ec5 100644
--- a/Utilities/KWIML/test/test_INT_format.h.in
+++ b/Utilities/KWIML/test/test_INT_format.h.in
@@ -25,8 +25,8 @@
   T const x = VALUE(T, U);                                              \
   T y = C(V);                                                           \
   printf(LANG #C ":"                                                    \
-         " expression [%"@KWIML@_INT_PRI##PRI"],"                       \
-         " literal [%"@KWIML@_INT_PRI##PRI"]", x, y);                   \
+         " expression [%" @KWIML@_INT_PRI##PRI "],"                     \
+         " literal [%" @KWIML@_INT_PRI##PRI "]", x, y);                 \
   if(x == y)                                                            \
     {                                                                   \
     printf(", PASSED\n");                                               \
@@ -42,7 +42,7 @@
   {                                                                     \
   T const x = VALUE(T, U);                                              \
   char const* str = STR;                                                \
-  sprintf(buf, "%"@KWIML@_INT_PRI##PRI, x);                             \
+  sprintf(buf, "%" @KWIML@_INT_PRI##PRI, x);                            \
   printf(LANG "@KWIML@_INT_PRI" #PRI ":"                                \
          " expected [%s], got [%s]", str, buf);                         \
   if(strcmp(str, buf) == 0)                                             \
@@ -62,13 +62,13 @@
   T const x = VALUE(T, U);                                              \
   T y;                                                                  \
   char const* str = STR;                                                \
-  if(sscanf(str, "%"@KWIML@_INT_SCN##SCN, &y) != 1)                     \
+  if(sscanf(str, "%" @KWIML@_INT_SCN##SCN, &y) != 1)                    \
     {                                                                   \
     y = 0;                                                              \
     }                                                                   \
   printf(LANG "@KWIML@_INT_SCN" #SCN ":"                                \
-         " expected [%"@KWIML@_INT_PRI##PRI"],"                         \
-         " got [%"@KWIML@_INT_PRI##PRI"]", x, y);                       \
+         " expected [%" @KWIML@_INT_PRI##PRI "],"                       \
+         " got [%" @KWIML@_INT_PRI##PRI "]", x, y);                     \
   if(x == y)                                                            \
     {                                                                   \
     printf(", PASSED\n");                                               \
